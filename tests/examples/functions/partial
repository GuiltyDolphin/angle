print("Tests for partial functions");
print("Setting up 'Should equal ' partial");
shouldEq = partial($print, "Should equal ");

print("Using test list: [1, 3, 2, 1, 7, 9, 4]");
testList = [1, 3, 2, 1, 7, 9, 4];

defun filter(f, xs) {
  res = [];
  for elt in xs do {
    if f(elt) then res = (+ res elt);
  }
  res;
}

# true if (== x y)
defun eq(x, y) (== x y);

# true if (== 1 x)
eq1 = partial($eq, 1);

print("filter($eq1, testList)");
shouldEq("[1, 1]");
# print("Should equal [1, 1]");
print(filter($eq1, testList));

defun all(f, xs) {
  for elt in xs do {
    if ^f(elt) then return false;
  }
  true;
}

print("all($eq1, testList)");
shouldEq("false");
# print("Should equal false");
print(all($eq1, testList));
